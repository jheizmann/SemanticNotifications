C({"name": "specialevents", "children": ["jQuery.event.special.destroyed"], "type": "page", "parent": "../jquery/event/event.js", "comment": "<p>JavaScriptMVC provides a bunch of useful special events.  Find out more info on the left.  The following is a \nbrief summary:</p>\n\n<h2>[jQuery.event.special.default Default Events]</h2>\n\n<p>Lets you supply default behavior for an event that is preventable \nwith event.preventDefault().  This is extremely useful for providing DOM-like api's for your widgets.</p>\n\n<pre><code>$(\"#tabs\").delegate(\".panel\",\"default.open\", function(){\n  $(this).show()\n})\n</code></pre>\n\n<h2>[jQuery.event.special.destroyed Destroyed Events]</h2>\n\n<p>Know if an element has been removed from the page.</p>\n\n<pre><code>$(\"#contextMenu\").bind(\"destroyed\", function(){\n  // cleanup\n  $(document.body).unbind(\"click.contextMenu\");\n})\n</code></pre>\n\n<h2>[jQuery.Drag Drag] and [jQuery.Drop Drop] Events</h2>\n\n<p>Listen to drag-drop events with event delegation.</p>\n\n<pre><code>$(\".item\").live(\"dragover\", function(ev, drag){\n  // let user know that the item can be dropped\n  $(this).addClass(\"canDrop\");\n}).live(\"dropover\", function(ev, drop, drag){\n  // let user know that the item can be dropped on\n  $(this).addClass('drop-able')\n})\n</code></pre>\n\n<h2> </h2>", "title": "Special Events", "tags": ["core"]})