C({"name": "jquery.model.services", "type": "page", "parent": "../steal/dev/dev.js", "comment": "<p>Models provide an abstract API for connecting to your Services. <br />\nBy implementing static:</p>\n\n<ul>\n<li>[jQuery.Model.static.findAll] </li>\n<li>[jQuery.Model.static.findOne] </li>\n<li>[jQuery.Model.static.create] </li>\n<li>[jQuery.Model.static.update] </li>\n<li>[jQuery.Model.static.destroy]</li>\n</ul>\n\n<p>You can find more details on how to implement each method.\nTypically, you can just use templated service urls. But if you need to\nimplement these methods yourself, the following\nis a useful quick reference:</p>\n\n<h3>create(attrs, success([attrs]), error()) -> deferred</h3>\n\n<ul>\n<li><code>attrs</code> - an Object of attribute / value pairs</li>\n<li><code>success([attrs])</code> - Create calls success when the request has completed \nsuccessfully.  Success can be called back with an object that represents\nadditional properties that will be set on the instance. For example, the server might \nsend back an updatedAt date.</li>\n<li><code>error</code> - Create should callback error if an error happens during the request</li>\n<li><code>deferred</code> - A deferred that gets resolved to any additional attrs\nthat might need to be set on the model instance.</li>\n</ul>\n\n<h3>findAll( params, success(items), error) -> deferred</h3>\n\n<ul>\n<li><code>params</code> - an Object that filters the items returned</li>\n<li><code>success(items)</code> - success should be called with an Array of Model instances.</li>\n<li><code>error</code> - called if an error happens during the request</li>\n<li><code>deferred</code> - A deferred that gets resolved to the list of items</li>\n</ul>\n\n<h3>findOne(params, success(items), error) -> deferred</h3>\n\n<ul>\n<li><code>params</code> - an Object that filters the item returned</li>\n<li><code>success(item)</code> - success should be called with a model instance.</li>\n<li><code>error</code> - called if an error happens during the request</li>\n<li><code>deferred</code> - A deferred that gets resolved to a model instance</li>\n</ul>\n\n<h3>update(id, attrs, success([attrs]), error()) -> deferred</h3>\n\n<ul>\n<li><code>id</code> - the id of the instance you are updating</li>\n<li><code>attrs</code> - an Object of attribute / value pairs</li>\n<li><code>success([attrs])</code> - Call success when the request has completed \nsuccessfully.  Success can be called back with an object that represents\nadditional properties that will be set on the instance. For example, the server might \nsend back an updatedAt date.</li>\n<li><code>error</code> - Callback error if an error happens during the request</li>\n<li><code>deferred</code> - A deferred that gets resolved to any additional attrs\n that might need to be set on the model instance.</li>\n</ul>\n\n<h3>destroy(id, success([attrs]), error()) -> deferred</h3>\n\n<ul>\n<li><code>id</code> - the id of the instance you are destroying</li>\n<li><code>success([attrs])</code> - Calls success when the request has completed \n successfully.  Success can be called back with an object that represents\n additional properties that will be set on the instance. </li>\n<li><code>error</code> - Create should callback error if an error happens during the request</li>\n<li><code>deferred</code> - A deferred that gets resolved to any additional attrs\n that might need to be set on the model instance.</li>\n</ul>", "title": "Service APIs", "parents": ["jQuery.Model"], "children": []})